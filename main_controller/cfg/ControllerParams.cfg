#!/usr/bin/env python
PACKAGE = "dynamic_params"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("takeoff_pose_x",    double_t,    0, "takeoff_pose_x", 0.0,  0.0, 5)
gen.add("takeoff_pose_y",    double_t,    0, "takeoff_pose_y", 0.0,  0.0, 5)
gen.add("takeoff_pose_z",    double_t,    0, "takeoff_pose_z", 0.5,  0.0, 2)

gen.add("k_position_x",    double_t,    0, "k_position_x", 12.0,  0.0, 20)
gen.add("k_position_y",    double_t,    0, "k_position_y", 12.0,  0.0, 20)
gen.add("k_position_z",    double_t,    0, "k_position_z", 12.0,  0.0, 20)

gen.add("k_integral",    double_t,    0, "k_integral", 4.0,  0.0, 20)

gen.add("k_velocity_x",    double_t,    0, "k_velocity_x", 8.0,  0.0, 20)
gen.add("k_velocity_y",    double_t,    0, "k_velocity_y", 8.0,  0.0, 20)
gen.add("k_velocity_z",    double_t,    0, "k_velocity_z", 8.0,  0.0, 20)


gen.add("k_thrust",    double_t,    0, "k_thrust", 0.0203,  0, 0.1)

work_state_enum = gen.enum([ gen.const("takeoff",      int_t, 0, "takeoff"),
                  gen.const("attctr",      int_t, 1, "attctr"),
                  gen.const("land",      int_t, 2, "land"),
                  gen.const("waiting",      int_t, 3, "waiting"),
                  gen.const("trajectory",     int_t, 4, "trajectory")],
                  "Work_state to set")

gen.add("work_state", int_t, 0, "Work_state to set", 3, 0, 10, edit_method = work_state_enum)

exit(gen.generate(PACKAGE, "dynamic_params", "ControllerParams"))