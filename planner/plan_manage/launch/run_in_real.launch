<launch>
    <!-- number of moving objects -->
    <arg name="obj_num" value="10"/>
    <arg name="drone_id" value="0"/>

    <arg name="map_size_x" value="50.0"/>
    <arg name="map_size_y" value="50.0"/>
    <arg name="map_size_z" value=" 2.0"/>
    <arg name="odom_topic" value="/mavros/local_position/odom"/>

    <!-- main algorithm params -->
    <include file="$(find ego_planner)/launch/advanced_param_real.xml">
        <arg name="drone_id" value="$(arg drone_id)"/>
        <arg name="map_size_x_" value="$(arg map_size_x)"/>
        <arg name="map_size_y_" value="$(arg map_size_y)"/>
        <arg name="map_size_z_" value="$(arg map_size_z)"/>
        <arg name="odometry_topic" value="$(arg odom_topic)"/>
        <arg name="obj_num_set" value="$(arg obj_num)"/>
        <!-- camera pose: transform of camera frame in the world frame -->
        <!-- depth topic: depth image, 640x480 by default -->
        <!-- don't set cloud_topic if you already set these ones! -->
        <!--        D455-->
        <arg name="camera_pose_topic" value="/vins_estimator/camera_pose"/>
        <arg name="depth_topic" value="/camera/aligned_depth_to_color/image_raw"/>
        <!-- topic of point cloud measurement, such as from LIDAR  -->
        <!-- don't set camera pose and depth, if you already set this one! -->
        <arg name="cloud_topic" value="pcl_render_node/cloud"/>
        <!-- intrinsic params of the depth camera -->
        <!-- D455-->
         <arg name="cx" value="322.1283748720177"/>
         <arg name="cy" value="243.44425225854206"/>
         <arg name="fx" value="380.9915802505342"/>
         <arg name="fy" value="380.5726314074475"/>
        <!-- maximum velocity and acceleration the drone will reach -->
        <arg name="max_vel" value="2.0"/>
        <arg name="max_acc" value="2.0"/>
        <!--always set to 1.5 times grater than sensing horizen-->
        <arg name="planning_horizon" value="9"/>
        <arg name="use_distinctive_trajs" value="true"/>
        <!-- 1: use 2D Nav Goal to select goal  -->
        <!-- 2: use global waypoints below  -->
        <arg name="flight_type" value="2"/>
        <!-- global waypoints -->
        <!-- It generates a piecewise min-snap traj passing all waypoints -->
        <arg name="point_num" value="4"/>
        <arg name="point0_x" value="23"/>
        <arg name="point0_y" value="0"/>
        <arg name="point0_z" value="1"/>
        <arg name="point1_x" value="-7.0"/>
        <arg name="point1_y" value="0.0"/>
        <arg name="point1_z" value="1.0"/>
        <arg name="point2_x" value="23.0"/>
        <arg name="point2_y" value="0.0"/>
        <arg name="point2_z" value="1.0"/>
        <arg name="point3_x" value="-7.0"/>
        <arg name="point3_y" value="0.0"/>
        <arg name="point3_z" value="1.0"/>
        <arg name="point4_x" value="23.0"/>
        <arg name="point4_y" value="0.0"/>
        <arg name="point4_z" value="1.0"/>
    </include>
    <!-- trajectory server -->
    <node pkg="ego_planner" name="traj_server" type="traj_server" output="screen">
        <remap from="position_cmd" to="planning/pos_cmd"/>
        <remap from="~planning/bspline" to="planning/bspline"/>
        <param name="traj_server/time_forward" value="1.0" type="double"/>
    </node>

</launch>
